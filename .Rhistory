summary(reg)
adf.test(datos$pax)
plot(datos$pax)
9(12)
9*12
dim(datos)
plot(datos$pax, xlab = "Numero de Mes",ylab = "Cant. Turistas de Arg")
hist(datos$pax)
par(mfrow =c(1,2))
hist(datos$pax)
hist(log(datos$pax))
par(mfrow =c(1,2))
hist(datos$pax)
hist(log(datos$pax))
par(mfrow =c(1,3))
hist(datos$tcn.chile)
hist(datos$ipc.chile)
hist(datos$imacec.chile)
par(mfrow =c(2,2))
hist(datos$tcn.chile)
hist(datos$ipc.chile)
hist(datos$imacec.chile)
reg1 <- lm(log(pax) ~ log(tcn.chile) + log(ipc.chile) + imacec.chile, data = datos)
summary(reg1)
reg1 <- lm(log(pax) ~ log(tcn.chile) + log(ipc.chile) + log(imacec.chile), data = datos)
summary(reg1)
reg1 <- lm(log(pax) ~ log(tcn.chile) + log(ipc.chile) + imacec.chile, data = datos)
summary(reg1)
reg2 <- lm(log(pax) ~ log(tcn.chile) + log(ipc.chile), data = datos)
summary(reg2)
reg2 <- lm(pax ~  tcn.chile + imacec.chile , datos)
summary(reg2)
reg1 <- lm(log(pax) ~ log(tcn.chile) + log(ipc.chile) + log(imacec.chile), data = datos)
summary(reg1)
reg2 <- lm(log(pax) ~ log(tcn.chile) + log(ipc.chile), data = datos)
summary(reg2)
par(mfrow =c(3,2))
hist(datos$tcn.chile)
hist(datos$log(tcn.chile))
par(mfrow =c(3,2))
hist(datos$tcn.chile)
hist(log(datos$tcn.chile))
hist(datos$ipc.chile)
hist(log(datos$ipc.chile))
hist(datos$imacec.chile)
hist(log(datos$imacec.chile))
bptest(reg2)
bptest(reg2)
vif(reg2)
shapiro.test(reg2$residuals)
dwtest(reg2)
resettest(reg2)
trainreg2 <- datos [1:96 , ]
testreg2 <- datos[97:120 , ]
reg2_1 <-lm(log(pax) ~ log(tcn.chile) + log(ipc.chile), data = trainreg2)
summary(reg2_1)
plot(trainreg2$pax)
plot(reg2_1$fitted.values, col='red')
plot(trainreg2$pax)
plot(predict(reg2_1), col='red')
plot(log(trainreg2$pax))
plot(predict(reg2_1), col='red')
plot(log(trainreg2$pax))
lines(predict(reg2_1), col='red')
log(exp(1))
plot(trainreg2$pax)
lines(exp(predict(reg2_1)), col='red')
par(mfrow =c(1,2))
plot(log(trainreg2$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1), col='red')
plot(trainreg2$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1)), col='red')
96/120
par(mfrow =c(2,1))
plot(log(trainreg2$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1), col='red')
plot(trainreg2$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1)), col='red')
par(mfrow =c(1,2))
plot(log(trainreg2$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1), col='red')
plot(trainreg2$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1)), col='red')
train <- datos [1:96 , ]
test <- datos[97:120 , ]
reg2_1 <-lm(log(pax) ~ log(tcn.chile) + log(ipc.chile), data = train)
summary(reg2_1)
par(mfrow =c(1,2))
plot(log(train$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1), col='red')
plot(train$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1)), col='red')
par(mfrow =c(1,2))
plot(log(test$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1), col='red')
plot(test$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1)), col='red')
plot(predict(reg2_1), col='red')
par(mfrow =c(1,2))
plot(log(test$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1, test), col='red')
plot(test$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1,test)), col='red')
par(mfrow =c(1,2))
plot(log(train$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1, train), col='red')
plot(train$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1, train)), col='red')
par(mfrow =c(1,2))
plot(log(test$pax), xlab = "Numero de mes", ylab = "Log(pax)")
lines(predict(reg2_1, test), col='red')
plot(test$pax, xlab = "Numero de mes", ylab = "pax")
lines(exp(predict(reg2_1,test)), col='red')
dim(datos)
shapiro.test(datos$pax)
shapiro.test(log(datos$pax))
days_of_week <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
percentage <- c(10, 8, 9, 10, 15, 27, 21)
data_day_per_assistance <- data.frame(Day = days_of_week, day_percentage = percentage)
data_day_per_assistance
head(merged_data)
library(dplyr)
# Unimos el dataframe `merged_data` con los porcentajes por mes y dÃ­a
merged_data <- merged_data %>%
left_join(data_month_per_bath, by = "Month") %>%
left_join(data_day_per_assistance, by = "Day") %>%
mutate(NewColumn = Attendance * month_asis_percentage * day_percentage)
merged_data = merge(data, data2, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
merged_data=merge(data, data2, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
#| label: setup
#| include: false
# Load libraries and settings here
library(tidyverse)
library(readxl)
library(here)
library(viridis)
library(dplyr)
library(waffle)
library(gridExtra)
library(purrr)
library(waffle)
library(plotly)
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = "figs/", # Folder where rendered plots are saved
fig.width = 7.252, # Default plot width
fig.height = 4, # Default plot height
fig.retina = 3 # For better plot resolution
)
# Put any other "global" settings here, e.g. a ggplot theme:
theme_set(theme_bw(base_size = 20))
# Write code below here to load any data used in project
path_sharks <- here::here("data_raw", "Copy of SharkIncidents_1950_2022_220302.xlsx")
path_attendance <- here::here("data_raw", "USLA Statistical Incident Database - ALL AGENCIES ALL YEARS.csv")
data = read_excel(path_sharks)
data2 = read.csv(path_attendance)
#| label: setup
#| include: false
# Load libraries and settings here
library(tidyverse)
library(readxl)
library(here)
library(viridis)
library(dplyr)
library(waffle)
library(gridExtra)
library(purrr)
library(waffle)
library(plotly)
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = "figs/", # Folder where rendered plots are saved
fig.width = 7.252, # Default plot width
fig.height = 4, # Default plot height
fig.retina = 3 # For better plot resolution
)
# Put any other "global" settings here, e.g. a ggplot theme:
theme_set(theme_bw(base_size = 20))
# Write code below here to load any data used in project
path_sharks <- here::here("data_raw", "Copy of SharkIncidents_1950_2022_220302.xlsx")
path_attendance <- here::here("data_raw", "USLA Statistical Incident Database - ALL AGENCIES ALL YEARS.csv")
data = read_excel(path_sharks)
data2 = read.csv(path_attendance)
head(data)
data2 <- data2[which(data2$State == "California"),]
data2$Attendance = as.numeric(gsub(",", "", data2$Attendance))
data2$County = ifelse(data2$County == "Sanoma County", "Sonoma", data2$County)
head(data2)
data2$County = factor(gsub("(?i)county", "", data2$County))
data2$County = factor(trimws(data2$County))
unique(data2$County)
data = data[1:(nrow(data) - 9), ]
data$IncidentNum = as.numeric(data$IncidentNum)
data$Time = as.numeric(data$Time)
data$Mode = as.factor(data$Mode)
data$County = as.factor(data$County)
data$Location = as.factor(data$Location)
data$Depth = ifelse(data$Depth == "surface"  | data$Depth == "surface*", 0, data$Depth)
data$Depth = ifelse(data$Depth == "underwater"  | data$Depth == "submerged" | data$Depth == "submerged*", 5, data$Depth)
data$Injury = ifelse(data$Injury == "minor*", 'minor', data$Injury)
data$Injury = ifelse(data$Injury == "major*", 'major',data$Injury)
data$Injury = ifelse(data$Injury == "none*", 'none',data$Injury)
data$Injury = as.factor(data$Injury)
data$Depth = as.numeric(data$Depth)
data$Species = as.factor(data$Species)
data <- data[!is.na(data$IncidentNum), ]
data$number <- seq_len(nrow(data))
data$Year <- year(data$Date)           # Extract year
data$Month <- month(data$Date, label = TRUE, abbr = FALSE)     # Extract month
data$Day <- weekdays(data$Date)
summary(data)
month <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
month_percentage <- c(4.6/119.3, 4/119.3, 6/119.3,7/119.3, 9/119.3, 16/119.3, 28/119.3, 24/119.3, 12/119.3, 5.4/119.3, 4/119.3, 4/119.3)
# Create the dataframe
data_month_per_assistance <- data.frame(Month = month, month_percentage = month_percentage)
data_month_per_assistance
days_of_week <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
percentage <- c(0.10, .8, .9, .10, .15, .27, .21)
data_day_per_assistance <- data.frame(Day = days_of_week, day_percentage = percentage)
data_day_per_assistance
month <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
month_percentage <- c(0.26,.28,.33,.31,.41,.50,.52,.54,.50,.36,.29,.27)
data_month_per_bath <- data.frame(Month = month, month_percentage = month_percentage)
data_month_per_bath$month_asis_percentage <- data_month_per_bath$month_percentage*data_month_per_assistance$month_percentage
data_month_per_bath
merged_data=merge(data, data2, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
names(merged_data)
merged_data = merge(data, data2, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
merged_data <- merged_data %>%
left_join(data_month_per_bath, by = "Month") %>%
left_join(data_day_per_assistance, by = "Day") %>%
mutate(NewColumn = Attendance * month_asis_percentage * day_percentage)
summary(merged_data$NewColumn)
head(merged_data)
#| label: setup
#| include: false
# Load libraries and settings here
library(tidyverse)
library(readxl)
library(here)
library(viridis)
library(dplyr)
library(waffle)
library(gridExtra)
library(purrr)
library(waffle)
library(plotly)
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = "figs/", # Folder where rendered plots are saved
fig.width = 7.252, # Default plot width
fig.height = 4, # Default plot height
fig.retina = 3 # For better plot resolution
)
# Put any other "global" settings here, e.g. a ggplot theme:
theme_set(theme_bw(base_size = 20))
# Write code below here to load any data used in project
path_sharks <- here::here("data_raw", "Copy of SharkIncidents_1950_2022_220302.xlsx")
path_attendance <- here::here("data_raw", "USLA Statistical Incident Database - ALL AGENCIES ALL YEARS.csv")
data = read_excel(path_sharks)
data2 = read.csv(path_attendance)
#| label: setup
#| include: false
# Load libraries and settings here
library(tidyverse)
library(readxl)
library(here)
library(viridis)
library(dplyr)
library(waffle)
library(gridExtra)
library(purrr)
library(waffle)
library(plotly)
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = "figs/", # Folder where rendered plots are saved
fig.width = 7.252, # Default plot width
fig.height = 4, # Default plot height
fig.retina = 3 # For better plot resolution
)
# Put any other "global" settings here, e.g. a ggplot theme:
theme_set(theme_bw(base_size = 20))
# Write code below here to load any data used in project
path_sharks <- here::here("data_raw", "Copy of SharkIncidents_1950_2022_220302.xlsx")
path_attendance <- here::here("data_raw", "USLA Statistical Incident Database - ALL AGENCIES ALL YEARS.csv")
data = read_excel(path_sharks)
data2 = read.csv(path_attendance)
head(data)
data2 <- data2[which(data2$State == "California"),]
data2$Attendance = as.numeric(gsub(",", "", data2$Attendance))
data2$County = ifelse(data2$County == "Sanoma County", "Sonoma", data2$County)
#head(data2)
data2 = data2[, -c(12:74)]
data2 <- data2[which(data2$State == "California"),]
data2$Attendance = as.numeric(gsub(",", "", data2$Attendance))
data2$County = ifelse(data2$County == "Sanoma County", "Sonoma", data2$County)
data2$County = factor(gsub("(?i)county", "", data2$County))
data2$County = factor(trimws(data2$County))
data2$County = factor(gsub("(?i)county", "", data2$County))
data2$County = factor(trimws(data2$County))
unique(data2$County)
names(data2)
data = data[1:(nrow(data) - 9), ]
data <- data[, -c(10:14)]
data$IncidentNum = as.numeric(data$IncidentNum)
data$Time = as.numeric(data$Time)
data$Mode = as.factor(data$Mode)
data$County = as.factor(data$County)
data$Location = as.factor(data$Location)
data$Depth = ifelse(data$Depth == "surface"  | data$Depth == "surface*", 0, data$Depth)
data$Depth = ifelse(data$Depth == "underwater"  | data$Depth == "submerged" | data$Depth == "submerged*", 5, data$Depth)
data$Injury = ifelse(data$Injury == "minor*", 'minor', data$Injury)
data$Injury = ifelse(data$Injury == "major*", 'major',data$Injury)
data$Injury = ifelse(data$Injury == "none*", 'none',data$Injury)
data$Injury = as.factor(data$Injury)
data$Depth = as.numeric(data$Depth)
data$Species = as.factor(data$Species)
data <- data[!is.na(data$IncidentNum), ]
data$number <- seq_len(nrow(data))
data$Year <- year(data$Date)
data$Month <- month(data$Date, label = TRUE, abbr = FALSE)
data$Day <- weekdays(data$Date)
summary(data)
month <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
month_percentage <- c(4.6/119.3, 4/119.3, 6/119.3,7/119.3, 9/119.3, 16/119.3, 28/119.3, 24/119.3, 12/119.3, 5.4/119.3, 4/119.3, 4/119.3)
data_month_per_assistance <- data.frame(Month = month, month_percentage = month_percentage)
data_month_per_assistance
days_of_week <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
percentage <- c(0.10, .8, .9, .10, .15, .27, .21)
data_day_per_assistance <- data.frame(Day = days_of_week, day_percentage = percentage)
data_day_per_assistance
month <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
month_percentage <- c(0.26,.28,.33,.31,.41,.50,.52,.54,.50,.36,.29,.27)
data_month_per_bath <- data.frame(Month = month, month_percentage = month_percentage)
data_month_per_bath$month_asis_percentage <- data_month_per_bath$month_percentage*data_month_per_assistance$month_percentage
data_month_per_bath
dim(data)
dim(data2)
merged_data=merge(data, data2, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
names(merged_data)
summary(merged_data$Attendance)
dim(merged_data)
merged_data=merge(data2, data, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
names(merged_data)
summary(merged_data$Attendance)
dim(merged_data)
head(merged_data[,c( "Year","County", "Attendance",)])
head(merged_data[,c( "Year","County", "Attendance")])
head(merged_data[,c( "Year","County", "Attendance", "Date")])
summary(merged_data$Year)
merged_data=merge(data2, data, by.x=c('Year', 'County'),
by.y=c('Year', 'County'), all = TRUE)
names(merged_data)
summary(merged_data$Attendance)
dim(merged_data)
head(merged_data[,c( "Year","County", "Attendance", "Date")])
merged_data=merge(data2, data, by.x=c('Year', 'County'),
by.y=c('Year', 'County'), all.y = TRUE)
names(merged_data)
summary(merged_data$Attendance)
dim(merged_data)
merged_data=merge(data2, data, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
names(merged_data)
summary(merged_data$Attendance)
dim(merged_data)
head(merged_data[,c( "Year","County", "Attendance", "Date")])
summary(data$Year)
summary(data2$Year)
summary(data$Year)
summary(data2$Year)
summary(data$County)
summary(data2$County)
data$County <- tolower(data$County)
data2$County <- tolower(data2$County)
merged_data=merge(data2, data, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
names(merged_data)
summary(merged_data$Attendance)
dim(merged_data)
head(merged_data[,c( "Year","County", "Attendance", "Date")])
print(merged_data[,c( "Year","County", "Attendance", "Date")][5,1])
print(merged_data[,c( "Year","County", "Attendance", "Date")][6,1])
merged_data[,c( "Year","County", "Attendance", "Date")][5,1]==merged_data[,c( "Year","County", "Attendance", "Date")][6,1]
merged_data[,c( "Year","County", "Attendance", "Date")][5,2]==merged_data[,c( "Year","County", "Attendance", "Date")][6,2]
data2[,data2$Year == 1984 & data2$County == san diego]
data2[,data2$Year == 1984 & (data2$County == "san diego")]
data2[data2$Year == 1984 & (data2$County == "san diego"),]
head(merged_data[,c( "Year","County", "Attendance", "Date", "City")])
data3 <- data2 %>%
group_by(Year, County) %>%
summarise(total_attendance = sum(Attendance, na.rm = TRUE), .groups = "drop")
head(attendance_summary)
data3 <- data2 %>%
group_by(Year, County) %>%
summarise(total_attendance = sum(Attendance, na.rm = TRUE), .groups = "drop")
head(data3)
head(data4)
data4 <- merged_data %>%
group_by(County) %>%
summarise(total_attendance_county = sum(total_attendance, na.rm = TRUE), .groups = "drop")
data4 <- merged_data %>%
group_by(County) %>%
summarise(total_attendance_county = sum(total_attendance, na.rm = TRUE), .groups = "drop")
county_counts <- data %>%
count(County) %>%
arrange(desc(n))
county_counts
data4
county_counts <- data %>%
count(County) %>%
arrange(desc(n))
#| label: setup
#| include: false
# Load libraries and settings here
library(tidyverse)
library(readxl)
library(here)
library(viridis)
library(dplyr)
library(waffle)
library(gridExtra)
library(purrr)
library(waffle)
library(plotly)
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = "figs/", # Folder where rendered plots are saved
fig.width = 7.252, # Default plot width
fig.height = 4, # Default plot height
fig.retina = 3 # For better plot resolution
)
# Put any other "global" settings here, e.g. a ggplot theme:
theme_set(theme_bw(base_size = 20))
# Write code below here to load any data used in project
path_sharks <- here::here("data_raw", "Copy of SharkIncidents_1950_2022_220302.xlsx")
path_attendance <- here::here("data_raw", "USLA Statistical Incident Database - ALL AGENCIES ALL YEARS.csv")
data = read_excel(path_sharks)
data2 = read.csv(path_attendance)
head(data)
data2 = data2[, -c(12:74)]
data2 <- data2[which(data2$State == "California"),]
data2$Attendance = as.numeric(gsub(",", "", data2$Attendance))
data2$County = ifelse(data2$County == "Sanoma County", "Sonoma", data2$County)
data2$County = factor(gsub("(?i)county", "", data2$County))
data2$County = factor(trimws(data2$County))
data2$County = factor(gsub("(?i)county", "", data2$County))
data2$County = factor(trimws(data2$County))
unique(data2$County)
names(data2)
dim(data2)
data = data[1:(nrow(data) - 9), ]
data <- data[, -c(10:14)]
data$IncidentNum = as.numeric(data$IncidentNum)
data$Time = as.numeric(data$Time)
data$Mode = as.factor(data$Mode)
data$County = as.factor(data$County)
data$Location = as.factor(data$Location)
data$Depth = ifelse(data$Depth == "surface"  | data$Depth == "surface*", 0, data$Depth)
data$Depth = ifelse(data$Depth == "underwater"  | data$Depth == "submerged" | data$Depth == "submerged*", 5, data$Depth)
data$Injury = ifelse(data$Injury == "minor*", 'minor', data$Injury)
data$Injury = ifelse(data$Injury == "major*", 'major',data$Injury)
data$Injury = ifelse(data$Injury == "none*", 'none',data$Injury)
data$Injury = as.factor(data$Injury)
data$Depth = as.numeric(data$Depth)
data$Species = as.factor(data$Species)
data <- data[!is.na(data$IncidentNum), ]
data$number <- seq_len(nrow(data))
data$Year <- year(data$Date)
data$Month <- month(data$Date, label = TRUE, abbr = FALSE)
data$Day <- weekdays(data$Date)
summary(data)
data3 <- data2 %>%
group_by(Year, County) %>%
summarise(total_attendance = sum(Attendance, na.rm = TRUE), .groups = "drop")
head(data3)
merged_data = merge(data3, data, by.x=c('Year', 'County'),
by.y=c('Year', 'County'))
names(merged_data)
dim(merged_data)
data4 <- merged_data %>%
group_by(County) %>%
summarise(total_attendance_county = sum(total_attendance, na.rm = TRUE), .groups = "drop")
head(data4)
county_counts <- data %>%
count(County) %>%
arrange(desc(n))
county_counts
unique(merged_data$County)
merged_data$County
data4 <- merged_data %>%
group_by(County) %>%
summarise(total_attendance_county = sum(total_attendance, na.rm = TRUE), .groups = "drop")
head(data4)
0.0000113
